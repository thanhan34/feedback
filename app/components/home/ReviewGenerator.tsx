"use client";

import React, { useState } from 'react';
import Input from '../common/Input';
import Button from '../common/Button';
import Rating from '../common/Rating';
import TextArea from '../common/TextArea';
import { getRandomTemplate } from '../../utils/reviewTemplates';

const ReviewGenerator: React.FC = () => {
  const [teacherName, setTeacherName] = useState('');
  const [courseName, setCourseName] = useState('');
  const [target, setTarget] = useState('');
  const [generatedReview, setGeneratedReview] = useState('');
  const [editableReview, setEditableReview] = useState('');
  const [ratings, setRatings] = useState(Array(8).fill(5));
  const [copySuccess, setCopySuccess] = useState(false);

  const handleRatingChange = (index: number, value: number) => {
    const newRatings = [...ratings];
    newRatings[index] = value;
    setRatings(newRatings);
  };

  const setAllFiveStars = () => {
    setRatings(Array(8).fill(5));
  };

  const generateReview = () => {
    // Only generate review if all ratings are 5
    if (!ratings.every(r => r === 5)) {
      alert('Vui l√≤ng ƒë√°nh gi√° 5 sao cho t·∫•t c·∫£ c√°c m·ª•c ƒë·ªÉ t·∫°o review');
      return;
    }
    
    const review = getRandomTemplate(teacherName, courseName, target);
    setGeneratedReview(review);
    setEditableReview(review);
  };

  const handleCopyReview = () => {
    navigator.clipboard.writeText(editableReview)
      .then(() => {
        setCopySuccess(true);
        setTimeout(() => setCopySuccess(false), 2000);
      })
      .catch(err => {
        console.error('Kh√¥ng th·ªÉ sao ch√©p: ', err);
      });
  };

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <Input
            id="teacherName"
            name="teacherName"
            label="T√™n gi·∫£ng vi√™n"
            placeholder="Nh·∫≠p t√™n gi·∫£ng vi√™n"
            value={teacherName}
            onChange={(e) => setTeacherName(e.target.value)}
          />
        </div>
        
        <div>
          <Input
            id="courseName"
            name="courseName"
            label="T√™n kh√≥a h·ªçc"
            placeholder="Nh·∫≠p t√™n kh√≥a h·ªçc"
            value={courseName}
            onChange={(e) => setCourseName(e.target.value)}
          />
        </div>
      </div>
      
      <div>
        <Input
          id="target"
          name="target"
          label="M·ª•c ti√™u ƒëi·ªÉm s·ªë"
          placeholder="V√≠ d·ª•: 65+, 79+, v.v."
          value={target}
          onChange={(e) => setTarget(e.target.value)}
        />
      </div>
      
      <div className="border-t border-gray-200 pt-4">
        <h3 className="text-lg font-medium text-gray-800 mb-3">ƒê√°nh gi√°</h3>
        <p className="text-sm text-gray-600 mb-3">
          T·∫•t c·∫£ c√°c m·ª•c ph·∫£i ƒë∆∞·ª£c ƒë√°nh gi√° 5 sao ƒë·ªÉ t·∫°o review
        </p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {[
            'Gi·∫£i ƒë√°p r√µ r√†ng',
            'Ki·∫øn th·ª©c c·∫≠p nh·∫≠t',
            'Ph√π h·ª£p v·ªõi h·ªçc vi√™n',
            'ƒêa d·∫°ng ph∆∞∆°ng ph√°p',
            'Th√°i ƒë·ªô th√¢n thi·ªán',
            'L·∫Øng nghe h·ªçc vi√™n',
            'C·∫£m th·∫•y ti·∫øn b·ªô',
            'ƒê·∫°t m·ª•c ti√™u h·ªçc t·∫≠p'
          ].map((category, index) => (
            <div key={index}>
              <Rating
                id={`rating-${index}`}
                name={`rating-${index}`}
                label={category}
                value={ratings[index]}
                onChange={(value) => handleRatingChange(index, value)}
              />
            </div>
          ))}
        </div>
        
        <div className="flex justify-center mt-4">
          <Button
            type="button"
            variant="outline"
            onClick={setAllFiveStars}
          >
            ƒê·∫∑t t·∫•t c·∫£ 5 sao
          </Button>
        </div>
      </div>
      
      <div className="flex flex-col md:flex-row justify-center gap-4">
        <Button
          type="button"
          variant="primary"
          size="lg"
          onClick={generateReview}
          className="w-full md:w-auto"
        >
          T·∫°o review
        </Button>
        
        <Button
          type="button"
          variant="outline"
          size="lg"
          onClick={() => {
            // Generate random data
            const randomTeachers = [
              'Nguy·ªÖn VƒÉn A',
              'Tr·∫ßn Th·ªã B',
              'L√™ VƒÉn C',
              'Ph·∫°m Th·ªã D',
              'Ho√†ng VƒÉn E'
            ];
            
            const randomCourses = [
              'PTE Academic',
              'IELTS',
              'Giao ti·∫øp',
              'Business English',
              'TOEIC'
            ];
            
            const randomTargets = [
              '65+',
              '79+',
              '90+',
              '7.0',
              '8.0'
            ];
            
            // Set random values
            const randomTeacher = randomTeachers[Math.floor(Math.random() * randomTeachers.length)];
            const randomCourse = randomCourses[Math.floor(Math.random() * randomCourses.length)];
            const randomTarget = randomTargets[Math.floor(Math.random() * randomTargets.length)];
            
            setTeacherName(randomTeacher);
            setCourseName(randomCourse);
            setTarget(randomTarget);
            setRatings(Array(8).fill(5));
            
            // Generate review with random data
            const review = getRandomTemplate(randomTeacher, randomCourse, randomTarget);
            setGeneratedReview(review);
            setEditableReview(review);
          }}
          className="w-full md:w-auto"
        >
          T·∫°o review ng·∫´u nhi√™n
        </Button>
      </div>
      
      {generatedReview && (
        <div className="border-t border-gray-200 pt-4 space-y-4">
          <div className="flex justify-between items-center">
            <h3 className="text-lg font-medium text-gray-800">Review ƒë∆∞·ª£c t·∫°o</h3>
            <Button
              type="button"
              variant="outline"
              onClick={() => {
                setTeacherName('');
                setCourseName('');
                setTarget('');
                setGeneratedReview('');
                setEditableReview('');
                setRatings(Array(8).fill(5));
              }}
              className="flex items-center"
            >
              <span className="mr-1">üîÑ</span>
              T·∫°o m·ªõi
            </Button>
          </div>
          
          <div className="bg-[#fedac2] p-4 rounded-md">
            <p className="text-[#fc5d01] font-medium mb-2">
              G·ª£i √Ω review:
            </p>
            <div className="bg-white p-3 border border-[#fdbc94] rounded-md text-sm text-gray-700">
              {generatedReview}
            </div>
          </div>
          
          <div>
            <p className="text-sm text-gray-600 mb-1">Ch·ªânh s·ª≠a review c·ªßa b·∫°n:</p>
            <TextArea
              id="editableReview"
              name="editableReview"
              value={editableReview}
              onChange={(e) => setEditableReview(e.target.value)}
              rows={5}
              className="bg-white border-[#fdbc94] focus:border-[#fc5d01] focus:ring-[#fc5d01]"
            />
          </div>
          
          <div className="flex flex-wrap gap-2">
            <Button
              type="button"
              variant="outline"
              onClick={handleCopyReview}
              className="flex items-center"
            >
              <span className="mr-1">üìã</span>
              {copySuccess ? 'ƒê√£ sao ch√©p!' : 'Sao ch√©p n·ªôi dung'}
            </Button>
            
            <Button
              type="button"
              variant="primary"
              onClick={() => window.open('https://g.page/r/CQxR-OQvJOFsEAI/review', '_blank')}
              className="flex items-center"
            >
              <span className="mr-1">‚úçÔ∏è</span>
              Vi·∫øt review tr√™n Google
            </Button>
            
            <Button
              type="button"
              variant="primary"
              onClick={() => window.open('https://www.facebook.com/PTEIntensive/reviews/', '_blank')}
              className="flex items-center"
            >
              <span className="mr-1">‚úçÔ∏è</span>
              Vi·∫øt review tr√™n Facebook
            </Button>
          </div>
        </div>
      )}
    </div>
  );
};

export default ReviewGenerator;
